[gd_scene load_steps=15 format=2]

[ext_resource path="res://assets/images/map/mapa01_floresta_inexplorado.jpg" type="Texture" id=1]
[ext_resource path="res://game/map/Camera.gd" type="Script" id=2]
[ext_resource path="res://game/map/Map.gd" type="Script" id=3]
[ext_resource path="res://assets/images/map/map_background.png" type="Texture" id=4]
[ext_resource path="res://assets/fonts/font-data/font-style.ttf" type="DynamicFontData" id=5]
[ext_resource path="res://assets/images/map/mapa01_floresta_explorado.jpg" type="Texture" id=6]
[ext_resource path="res://game/map/VisibleMapMaterial.tres" type="Material" id=7]

[sub_resource type="Shader" id=2]
code = "shader_type canvas_item;


void fragment(){
	float intensity = .05;
	float dist = distance(UV, vec2(.5,.5));
	COLOR.a = pow(dist, intensity);
	COLOR.a *= 1.0 - smoothstep(0.0, .98, dist);
}

"

[sub_resource type="ShaderMaterial" id=3]
shader = SubResource( 2 )

[sub_resource type="Shader" id=4]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform float _size : hint_range(0, 10) = 5;
uniform sampler2D noise;
uniform vec2 moving_offset = vec2(.05,.03);
uniform float shadow_strength = .5;
uniform float shadow_factor = 0.3;
uniform float brightness_anchor = .24;
uniform float brightness_variance = .015;
uniform float brightness_frequency = 2.0;
uniform float rotation_intensity = 5.0;
uniform float rotation_frequency = .25;

float pascal_tra(int depth, int order) {
	if (order < 1 || order == depth) {
		return 1.0;
	} else {
		float Temp_o = 1.0;
		for (int i = 1; i <= order; i++) {
			Temp_o = Temp_o * float(i);
		}
		float Temp_d = 1.0;
		for (int i = 1; i <= depth; i++) {
			Temp_d = Temp_d * float(i);
		}
		float Temp_od = 1.0;
		for (int i = 1; i <= (depth - order); i++) {
			Temp_od = Temp_od * float(i);
		}
		return Temp_d / (Temp_o * Temp_od);
	}
}

void fragment( )
{
	float intensity = sin(brightness_frequency*TIME)*brightness_variance + brightness_anchor;
	float Count = pow(2.0, _size * 2.0) * pow(2.0, _size * 2.0);
	vec4 col = vec4(0.0);
	vec2 offset = vec2(moving_offset.x * rotation_intensity*cos(rotation_frequency*TIME), moving_offset.y * rotation_intensity*sin(rotation_frequency*TIME));
	if (rotation_intensity <= 0.0){
		offset = moving_offset*TIME;
	}
	float modi = 1.0 - pow(texture(noise, UV + offset).r, shadow_strength) * shadow_factor;
	for (int i = int(-_size); i <= int(_size); i++) {
		for (int j = int(-_size); j <= int(_size); j++) {
			vec2 quat_xy = vec2( float(i) * SCREEN_PIXEL_SIZE.x, float(j) * SCREEN_PIXEL_SIZE.y );
			float temp_x = (intensity + modi) * pascal_tra(int(_size) * 2, i + int(_size));
			float temp_y = (intensity + modi) * pascal_tra(int(_size) * 2, j + int(_size));
			col += textureLod(TEXTURE, UV + quat_xy, 0.0) * temp_x * temp_y / Count;
		}
	}
	
	COLOR = col;
}"

[sub_resource type="OpenSimplexNoise" id=6]
seed = 16
octaves = 1
period = 92.6
persistence = 0.823
lacunarity = 1.72

[sub_resource type="NoiseTexture" id=7]
flags = 15
width = 1024
height = 1024
seamless = true
bump_strength = 12.8
noise = SubResource( 6 )

[sub_resource type="ShaderMaterial" id=5]
shader = SubResource( 4 )
shader_param/_size = 5.0
shader_param/moving_offset = Vector2( 0.05, 0.03 )
shader_param/shadow_strength = 0.5
shader_param/shadow_factor = 0.3
shader_param/brightness_anchor = 0.13
shader_param/brightness_variance = 0.03
shader_param/brightness_frequency = 1.0
shader_param/rotation_intensity = 20.0
shader_param/rotation_frequency = 0.05
shader_param/noise = SubResource( 7 )

[sub_resource type="DynamicFont" id=1]
size = 110
outline_size = 4
outline_color = Color( 0.945098, 0.945098, 0.945098, 0.403922 )
use_mipmaps = true
use_filter = true
extra_spacing_top = -20
extra_spacing_bottom = -20
font_data = ExtResource( 5 )

[node name="Map" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
script = ExtResource( 3 )
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="BackestGround" type="TextureRect" parent="."]
modulate = Color( 0.478431, 0.478431, 0.478431, 1 )
margin_left = -2071.53
margin_top = -1377.85
margin_right = 3928.47
margin_bottom = 2622.15
texture = ExtResource( 4 )
expand = true
stretch_mode = 2
__meta__ = {
"_edit_use_anchors_": false
}

[node name="MapShadow" type="ColorRect" parent="."]
material = SubResource( 3 )
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -680.0
margin_top = -590.0
margin_right = 680.0
margin_bottom = 584.0
rect_scale = Vector2( 1.4, 1.4 )
rect_pivot_offset = Vector2( 1640, 1127 )
color = Color( 0, 0, 0, 1 )

[node name="BackgroundShadow" type="TextureRect" parent="."]
modulate = Color( 0, 0, 0, 0.333333 )
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -700.0
margin_top = -465.0
margin_right = 660.0
margin_bottom = 709.0
texture = ExtResource( 1 )
expand = true
stretch_mode = 3
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Background" type="TextureRect" parent="."]
material = SubResource( 5 )
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -750.0
margin_top = -515.0
margin_right = 610.0
margin_bottom = 659.0
texture = ExtResource( 1 )
expand = true
stretch_mode = 3
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VisibleBackground" type="TextureRect" parent="."]
light_mask = 16
material = ExtResource( 7 )
margin_left = -750.0
margin_top = -515.0
margin_right = 2530.0
margin_bottom = 1739.0
texture = ExtResource( 6 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Lines" type="Control" parent="."]
margin_right = 40.0
margin_bottom = 40.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Nodes" type="Control" parent="."]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ClickBlock" type="Control" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="Camera" type="Camera2D" parent="."]
position = Vector2( 960, 540 )
current = true
script = ExtResource( 2 )
__meta__ = {
"_edit_lock_": true
}

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="FloorLabel" type="Label" parent="CanvasLayer"]
margin_left = 32.0
margin_top = 32.0
margin_right = 658.0
margin_bottom = 335.0
custom_colors/font_color = Color( 0.184314, 0.137255, 0.137255, 1 )
custom_fonts/font = SubResource( 1 )
text = "BIG FLOOR NAME"
autowrap = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ParallaxBackground" type="ParallaxBackground" parent="."]

[node name="ParallaxLayer" type="ParallaxLayer" parent="ParallaxBackground"]
motion_mirroring = Vector2( 256, 256 )
