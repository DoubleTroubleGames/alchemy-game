[gd_scene load_steps=17 format=2]

[ext_resource path="res://assets/images/map/boss-open2.png" type="Texture" id=1]
[ext_resource path="res://game/map/MapNode.gd" type="Script" id=2]
[ext_resource path="res://game/tooltip/TooltipCollision.tscn" type="PackedScene" id=3]
[ext_resource path="res://assets/images/map/light_tex_2.png" type="Texture" id=4]
[ext_resource path="res://assets/images/map/boss-closed.png" type="Texture" id=5]
[ext_resource path="res://assets/images/map/boss-open1.png" type="Texture" id=6]
[ext_resource path="res://assets/images/map/elementCircle.png" type="Texture" id=7]

[sub_resource type="Shader" id=8]
code = "shader_type canvas_item;
render_mode unshaded;

// Texture must have 'Filter'-flag enabled!
vec4 texturePointSmooth(sampler2D smp, vec2 uv, vec2 pixel_size)
{
	vec2 ddx = dFdx(uv);
	vec2 ddy = dFdy(uv);
	vec2 lxy = sqrt(ddx * ddx + ddy * ddy);
	
	vec2 uv_pixels = uv / pixel_size;
	
	vec2 uv_pixels_floor = round(uv_pixels) - vec2(0.5f);
	vec2 uv_dxy_pixels = uv_pixels - uv_pixels_floor;
	
	uv_dxy_pixels = clamp((uv_dxy_pixels - vec2(0.5f)) * pixel_size / lxy + vec2(0.5f), 0.0f, 1.0f);
	
	uv = uv_pixels_floor * pixel_size;
	
	return textureGrad(smp, uv + uv_dxy_pixels * pixel_size, ddx, ddy);
}

void fragment()
{
	COLOR = texturePointSmooth(TEXTURE, UV, TEXTURE_PIXEL_SIZE);
}"

[sub_resource type="ShaderMaterial" id=9]
shader = SubResource( 8 )

[sub_resource type="RectangleShape2D" id=1]
extents = Vector2( 30, 30 )

[sub_resource type="Animation" id=3]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath(".:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ) ]
}
tracks/1/type = "bezier"
tracks/1/path = NodePath(".:scale:x")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"points": PoolRealArray( 1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0 )
}
tracks/2/type = "bezier"
tracks/2/path = NodePath(".:scale:y")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"points": PoolRealArray( 1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0 )
}

[sub_resource type="Animation" id=4]
resource_name = "idle"
tracks/0/type = "value"
tracks/0/path = NodePath(".:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ) ]
}

[sub_resource type="Animation" id=5]
resource_name = "moving"
length = 5.0
loop = true
tracks/0/type = "bezier"
tracks/0/path = NodePath(".:scale:x")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"points": PoolRealArray( 1, -0.25, 0, 0.25, 0, 1.1, -0.25, 0, 0.25, 0, 1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 2.5, 5 )
}
tracks/1/type = "bezier"
tracks/1/path = NodePath(".:scale:y")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"points": PoolRealArray( 1, -0.25, 0, 0.25, 0, 1.1, -0.25, 0, 0.25, 0, 1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 2.5, 5 )
}

[sub_resource type="Animation" id=2]
resource_name = "BossIntro"
tracks/0/type = "value"
tracks/0/path = NodePath("Button/Sprite:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.2, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 1,
"values": [ ExtResource( 5 ), ExtResource( 6 ), ExtResource( 1 ) ]
}

[sub_resource type="Animation" id=6]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("Button/Sprite:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ ExtResource( 7 ) ]
}

[sub_resource type="Animation" id=7]
resource_name = "idle"
length = 0.1
tracks/0/type = "value"
tracks/0/path = NodePath("Button/Sprite:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ ExtResource( 7 ) ]
}

[node name="MapNode" type="Control"]
script = ExtResource( 2 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Button" type="Button" parent="."]
self_modulate = Color( 1, 1, 1, 0 )
margin_left = -32.0
margin_top = -32.0
margin_right = 32.0
margin_bottom = 32.0
rect_min_size = Vector2( 64, 64 )
rect_pivot_offset = Vector2( 32, 32 )
disabled = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Sprite" type="Sprite" parent="Button"]
material = SubResource( 9 )
position = Vector2( 32, 32 )
texture = ExtResource( 7 )

[node name="Tween" type="Tween" parent="."]
playback_process_mode = 0

[node name="TooltipCollision" parent="." instance=ExtResource( 3 )]

[node name="CollisionShape2D" parent="TooltipCollision" index="0"]
shape = SubResource( 1 )

[node name="TooltipPosition" parent="TooltipCollision" index="1"]
position = Vector2( 55.7043, -58.2629 )

[node name="Light2D" type="Light2D" parent="."]
light_mask = 16
texture = ExtResource( 4 )
texture_scale = 2.0
energy = 0.0
mode = 2
range_item_cull_mask = 16

[node name="AnimationPlayer" type="AnimationPlayer" parent="Light2D"]
autoplay = "idle"
anims/RESET = SubResource( 3 )
anims/idle = SubResource( 4 )
anims/moving = SubResource( 5 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/BossIntro = SubResource( 2 )
anims/RESET = SubResource( 6 )
anims/idle = SubResource( 7 )

[node name="HoverSFX" type="AudioStreamPlayer" parent="."]
bus = "SFX"

[connection signal="mouse_entered" from="Button" to="." method="_on_Button_mouse_entered"]
[connection signal="mouse_exited" from="Button" to="." method="_on_Button_mouse_exited"]
[connection signal="pressed" from="Button" to="." method="_on_Button_pressed"]
[connection signal="disable_tooltip" from="TooltipCollision" to="." method="_on_TooltipCollision_disable_tooltip"]
[connection signal="enable_tooltip" from="TooltipCollision" to="." method="_on_TooltipCollision_enable_tooltip"]

[editable path="TooltipCollision"]
