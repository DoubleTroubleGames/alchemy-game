[gd_scene load_steps=11 format=2]

[ext_resource path="res://game/enemies/Enemy.gd" type="Script" id=1]
[ext_resource path="res://game/character/HealthBar.tscn" type="PackedScene" id=2]
[ext_resource path="res://assets/images/slime-icon.png" type="Texture" id=3]
[ext_resource path="res://game/character/StatusBar.tscn" type="PackedScene" id=7]
[ext_resource path="res://game/tooltip/TooltipCollision.tscn" type="PackedScene" id=9]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;
render_mode unshaded;

uniform float grayscale : hint_range(0.0, 1.0);
uniform float highlight_thickness : hint_range(0, 15) = 0.0;
uniform vec4 highlight_color : hint_color = vec4(1);

void fragment(){
	vec4 color = texture(TEXTURE, UV);
	
	// Grayscale
	vec3 gray = vec3(dot(color.rgb, vec3(0.299, 0.587, 0.114)));
	color.rgb = color.rgb + grayscale*(gray - color.rgb);
	
	// Outline
	vec2 size = TEXTURE_PIXEL_SIZE * highlight_thickness / 2.0;
	
	float outline = texture(TEXTURE, UV + vec2(-size.x, 0)).a;
	outline += texture(TEXTURE, UV + vec2(0, size.y)).a;
	outline += texture(TEXTURE, UV + vec2(size.x, 0)).a;
	outline += texture(TEXTURE, UV + vec2(0, -size.y)).a;
	outline += texture(TEXTURE, UV + vec2(-size.x, size.y)).a;
	outline += texture(TEXTURE, UV + vec2(size.x, size.y)).a;
	outline += texture(TEXTURE, UV + vec2(-size.x, -size.y)).a;
	outline += texture(TEXTURE, UV + vec2(size.x, -size.y)).a;
	outline = min(outline, 1.0);
	
	COLOR = mix(color, highlight_color, outline - color.a);
}
"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/grayscale = 0.0
shader_param/highlight_thickness = 2.0
shader_param/highlight_color = Color( 0.937255, 1, 0.737255, 0.784314 )

[sub_resource type="Animation" id=3]
length = 0.5
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath(".:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.15, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 0, 0 ), Vector2( -50, 30 ), Vector2( 0, 0 ) ]
}

[sub_resource type="Animation" id=4]
length = 2.0
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath(".:scale")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1, 2 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( 1.06, 1 ), Vector2( 1, 1 ) ]
}

[sub_resource type="RectangleShape2D" id=5]

[node name="Enemy" type="Node2D"]
script = ExtResource( 1 )

[node name="HealthBar" parent="." instance=ExtResource( 2 )]
position = Vector2( -414.401, 136.992 )

[node name="Sprite" type="Sprite" parent="."]
material = SubResource( 2 )
texture = ExtResource( 3 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="Sprite"]
autoplay = "idle"
anims/attack = SubResource( 3 )
anims/idle = SubResource( 4 )

[node name="Button" type="Button" parent="Sprite"]
modulate = Color( 1, 1, 1, 0 )
anchor_right = 1.0
anchor_bottom = 1.0
flat = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Intents" type="Node2D" parent="."]

[node name="StatusBar" parent="." instance=ExtResource( 7 )]
margin_left = -218.886
margin_top = 246.23
margin_right = -218.886
margin_bottom = 246.23
two_rows = false

[node name="TooltipCollision" parent="." instance=ExtResource( 9 )]

[node name="CollisionShape2D" parent="TooltipCollision" index="0"]
shape = SubResource( 5 )

[node name="TooltipPosition" type="Position2D" parent="."]

[node name="Tween" type="Tween" parent="."]
[connection signal="mouse_entered" from="Sprite/Button" to="." method="_on_Button_mouse_entered"]
[connection signal="mouse_exited" from="Sprite/Button" to="." method="_on_Button_mouse_exited"]
[connection signal="pressed" from="Sprite/Button" to="." method="_on_Button_pressed"]
[connection signal="disable_tooltip" from="TooltipCollision" to="." method="_on_TooltipCollision_disable_tooltip"]
[connection signal="enable_tooltip" from="TooltipCollision" to="." method="_on_TooltipCollision_enable_tooltip"]

[editable path="TooltipCollision"]
